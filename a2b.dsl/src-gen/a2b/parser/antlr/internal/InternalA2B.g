/*
 * generated by Xtext 2.17.0
 */
grammar InternalA2B;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package a2b.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package a2b.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import a2b.services.A2BGrammarAccess;

}

@parser::members {

 	private A2BGrammarAccess grammarAccess;

    public InternalA2BParser(TokenStream input, A2BGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected A2BGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementInstructionParserRuleCall_0());
			}
			lv_element_0_0=ruleInstruction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"element",
					lv_element_0_0,
					"a2b.A2B.Instruction");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getDBParserRuleCall_0());
		}
		this_DB_0=ruleDB
		{
			$current = $this_DB_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getDWParserRuleCall_1());
		}
		this_DW_1=ruleDW
		{
			$current = $this_DW_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getDDParserRuleCall_2());
		}
		this_DD_2=ruleDD
		{
			$current = $this_DD_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getSTRParserRuleCall_3());
		}
		this_STR_3=ruleSTR
		{
			$current = $this_STR_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getBase64ParserRuleCall_4());
		}
		this_Base64_4=ruleBase64
		{
			$current = $this_Base64_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getORGParserRuleCall_5());
		}
		this_ORG_5=ruleORG
		{
			$current = $this_ORG_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getINCLUDEParserRuleCall_6());
		}
		this_INCLUDE_6=ruleINCLUDE
		{
			$current = $this_INCLUDE_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getMACParserRuleCall_7());
		}
		this_MAC_7=ruleMAC
		{
			$current = $this_MAC_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getIPParserRuleCall_8());
		}
		this_IP_8=ruleIP
		{
			$current = $this_IP_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getHXSParserRuleCall_9());
		}
		this_HXS_9=ruleHXS
		{
			$current = $this_HXS_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInstructionAccess().getBEAction_10_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getBEParserRuleCall_10_1());
			}
			ruleBE
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInstructionAccess().getLEAction_11_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getLEParserRuleCall_11_1());
			}
			ruleLE
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInstructionAccess().getPCAPAction_12_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getPCAPParserRuleCall_12_1());
			}
			rulePCAP
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInstructionAccess().getCRCAction_13_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getCRCParserRuleCall_13_1());
			}
			ruleCRC
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDB
entryRuleDB returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDBRule()); }
	iv_ruleDB=ruleDB
	{ $current=$iv_ruleDB.current; }
	EOF;

// Rule DB
ruleDB returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DB'
		{
			newLeafNode(otherlv_0, grammarAccess.getDBAccess().getDBKeyword_0());
		}
		(
			(
				(
					lv_stringValue_1_0=RULE_BYTE
					{
						newLeafNode(lv_stringValue_1_0, grammarAccess.getDBAccess().getStringValueBYTETerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDBRule());
						}
						setWithLastConsumed(
							$current,
							"stringValue",
							lv_stringValue_1_0,
							"a2b.A2B.BYTE");
					}
				)
			)
			    |
			(
				(
					lv_intValue_2_0=RULE_INT
					{
						newLeafNode(lv_intValue_2_0, grammarAccess.getDBAccess().getIntValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDBRule());
						}
						setWithLastConsumed(
							$current,
							"intValue",
							lv_intValue_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		(
			(
				lv_crcValue_3_0=RULE_CRCCHECK
				{
					newLeafNode(lv_crcValue_3_0, grammarAccess.getDBAccess().getCrcValueCRCCHECKTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDBRule());
					}
					setWithLastConsumed(
						$current,
						"crcValue",
						lv_crcValue_3_0,
						"a2b.A2B.CRCCHECK");
				}
			)
		)?
	)
;

// Entry rule entryRuleDW
entryRuleDW returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDWRule()); }
	iv_ruleDW=ruleDW
	{ $current=$iv_ruleDW.current; }
	EOF;

// Rule DW
ruleDW returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DW'
		{
			newLeafNode(otherlv_0, grammarAccess.getDWAccess().getDWKeyword_0());
		}
		(
			(
				(
					lv_stringValue_1_0=RULE_WORD
					{
						newLeafNode(lv_stringValue_1_0, grammarAccess.getDWAccess().getStringValueWORDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDWRule());
						}
						setWithLastConsumed(
							$current,
							"stringValue",
							lv_stringValue_1_0,
							"a2b.A2B.WORD");
					}
				)
			)
			    |
			(
				(
					lv_intValue_2_0=RULE_INT
					{
						newLeafNode(lv_intValue_2_0, grammarAccess.getDWAccess().getIntValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDWRule());
						}
						setWithLastConsumed(
							$current,
							"intValue",
							lv_intValue_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		(
			(
				lv_crcValue_3_0=RULE_CRCCHECK
				{
					newLeafNode(lv_crcValue_3_0, grammarAccess.getDWAccess().getCrcValueCRCCHECKTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDWRule());
					}
					setWithLastConsumed(
						$current,
						"crcValue",
						lv_crcValue_3_0,
						"a2b.A2B.CRCCHECK");
				}
			)
		)?
	)
;

// Entry rule entryRuleDD
entryRuleDD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDDRule()); }
	iv_ruleDD=ruleDD
	{ $current=$iv_ruleDD.current; }
	EOF;

// Rule DD
ruleDD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DD'
		{
			newLeafNode(otherlv_0, grammarAccess.getDDAccess().getDDKeyword_0());
		}
		(
			(
				(
					lv_stringValue_1_0=RULE_DOUBLEWORD
					{
						newLeafNode(lv_stringValue_1_0, grammarAccess.getDDAccess().getStringValueDOUBLEWORDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDDRule());
						}
						setWithLastConsumed(
							$current,
							"stringValue",
							lv_stringValue_1_0,
							"a2b.A2B.DOUBLEWORD");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDDAccess().getLongValueLONGParserRuleCall_1_1_0());
					}
					lv_longValue_2_0=ruleLONG
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDDRule());
						}
						set(
							$current,
							"longValue",
							lv_longValue_2_0,
							"a2b.A2B.LONG");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_crcValue_3_0=RULE_CRCCHECK
				{
					newLeafNode(lv_crcValue_3_0, grammarAccess.getDDAccess().getCrcValueCRCCHECKTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDDRule());
					}
					setWithLastConsumed(
						$current,
						"crcValue",
						lv_crcValue_3_0,
						"a2b.A2B.CRCCHECK");
				}
			)
		)?
	)
;

// Entry rule entryRuleSTR
entryRuleSTR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSTRRule()); }
	iv_ruleSTR=ruleSTR
	{ $current=$iv_ruleSTR.current; }
	EOF;

// Rule STR
ruleSTR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='STR'
		{
			newLeafNode(otherlv_0, grammarAccess.getSTRAccess().getSTRKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getSTRAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSTRRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleBase64
entryRuleBase64 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBase64Rule()); }
	iv_ruleBase64=ruleBase64
	{ $current=$iv_ruleBase64.current; }
	EOF;

// Rule Base64
ruleBase64 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='B64'
		{
			newLeafNode(otherlv_0, grammarAccess.getBase64Access().getB64Keyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getBase64Access().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBase64Rule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleORG
entryRuleORG returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getORGRule()); }
	iv_ruleORG=ruleORG
	{ $current=$iv_ruleORG.current; }
	EOF;

// Rule ORG
ruleORG returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ORG'
		{
			newLeafNode(otherlv_0, grammarAccess.getORGAccess().getORGKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getORGAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getORGRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_crcValue_2_0=RULE_CRCCHECK
				{
					newLeafNode(lv_crcValue_2_0, grammarAccess.getORGAccess().getCrcValueCRCCHECKTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getORGRule());
					}
					setWithLastConsumed(
						$current,
						"crcValue",
						lv_crcValue_2_0,
						"a2b.A2B.CRCCHECK");
				}
			)
		)?
	)
;

// Entry rule entryRuleINCLUDE
entryRuleINCLUDE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getINCLUDERule()); }
	iv_ruleINCLUDE=ruleINCLUDE
	{ $current=$iv_ruleINCLUDE.current; }
	EOF;

// Rule INCLUDE
ruleINCLUDE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='INCLUDE'
		{
			newLeafNode(otherlv_0, grammarAccess.getINCLUDEAccess().getINCLUDEKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_PATH
				{
					newLeafNode(lv_value_1_0, grammarAccess.getINCLUDEAccess().getValuePATHTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getINCLUDERule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"a2b.A2B.PATH");
				}
			)
		)
	)
;

// Entry rule entryRuleMAC
entryRuleMAC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMACRule()); }
	iv_ruleMAC=ruleMAC
	{ $current=$iv_ruleMAC.current; }
	EOF;

// Rule MAC
ruleMAC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MAC'
		{
			newLeafNode(otherlv_0, grammarAccess.getMACAccess().getMACKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_MACADDRESS
				{
					newLeafNode(lv_value_1_0, grammarAccess.getMACAccess().getValueMACADDRESSTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMACRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"a2b.A2B.MACADDRESS");
				}
			)
		)
		(
			(
				lv_crcValue_2_0=RULE_CRCCHECK
				{
					newLeafNode(lv_crcValue_2_0, grammarAccess.getMACAccess().getCrcValueCRCCHECKTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMACRule());
					}
					setWithLastConsumed(
						$current,
						"crcValue",
						lv_crcValue_2_0,
						"a2b.A2B.CRCCHECK");
				}
			)
		)?
	)
;

// Entry rule entryRuleIP
entryRuleIP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIPRule()); }
	iv_ruleIP=ruleIP
	{ $current=$iv_ruleIP.current; }
	EOF;

// Rule IP
ruleIP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IP'
		{
			newLeafNode(otherlv_0, grammarAccess.getIPAccess().getIPKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_IPADDRESS
				{
					newLeafNode(lv_value_1_0, grammarAccess.getIPAccess().getValueIPADDRESSTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIPRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"a2b.A2B.IPADDRESS");
				}
			)
		)
		(
			(
				lv_crcValue_2_0=RULE_CRCCHECK
				{
					newLeafNode(lv_crcValue_2_0, grammarAccess.getIPAccess().getCrcValueCRCCHECKTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIPRule());
					}
					setWithLastConsumed(
						$current,
						"crcValue",
						lv_crcValue_2_0,
						"a2b.A2B.CRCCHECK");
				}
			)
		)?
	)
;

// Entry rule entryRuleHXS
entryRuleHXS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHXSRule()); }
	iv_ruleHXS=ruleHXS
	{ $current=$iv_ruleHXS.current; }
	EOF;

// Rule HXS
ruleHXS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='HXS'
		{
			newLeafNode(otherlv_0, grammarAccess.getHXSAccess().getHXSKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_HEXSTRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getHXSAccess().getValueHEXSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHXSRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"a2b.A2B.HEXSTRING");
				}
			)
		)
		(
			(
				lv_crcValue_2_0=RULE_CRCCHECK
				{
					newLeafNode(lv_crcValue_2_0, grammarAccess.getHXSAccess().getCrcValueCRCCHECKTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHXSRule());
					}
					setWithLastConsumed(
						$current,
						"crcValue",
						lv_crcValue_2_0,
						"a2b.A2B.CRCCHECK");
				}
			)
		)?
	)
;

// Entry rule entryRuleBE
entryRuleBE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBERule()); }
	iv_ruleBE=ruleBE
	{ $current=$iv_ruleBE.current.getText(); }
	EOF;

// Rule BE
ruleBE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='BE'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getBEAccess().getBEKeyword());
	}
;

// Entry rule entryRuleLE
entryRuleLE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLERule()); }
	iv_ruleLE=ruleLE
	{ $current=$iv_ruleLE.current.getText(); }
	EOF;

// Rule LE
ruleLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='LE'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getLEAccess().getLEKeyword());
	}
;

// Entry rule entryRulePCAP
entryRulePCAP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPCAPRule()); }
	iv_rulePCAP=rulePCAP
	{ $current=$iv_rulePCAP.current.getText(); }
	EOF;

// Rule PCAP
rulePCAP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='PCAP'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPCAPAccess().getPCAPKeyword());
	}
;

// Entry rule entryRuleCRC
entryRuleCRC returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCRCRule()); }
	iv_ruleCRC=ruleCRC
	{ $current=$iv_ruleCRC.current.getText(); }
	EOF;

// Rule CRC
ruleCRC returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='CRC'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getCRCAccess().getCRCKeyword());
	}
;

// Entry rule entryRuleLONG
entryRuleLONG returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLONGRule()); }
	iv_ruleLONG=ruleLONG
	{ $current=$iv_ruleLONG.current.getText(); }
	EOF;

// Rule LONG
ruleLONG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getLONGAccess().getINTTerminalRuleCall());
	}
;

fragment RULE_DECIMALBYTE_ : (('1'..'9')? '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'4' '0'..'9'|'2' '5' '0'..'5');

fragment RULE_BINARY_ : ('0'|'1') ('0'|'1') ('0'|'1') ('0'|'1') ('0'|'1') ('0'|'1') ('0'|'1') ('0'|'1');

fragment RULE_HEX_ : ('A'..'F'|'a'..'f'|'0'..'9') ('A'..'F'|'a'..'f'|'0'..'9');

RULE_BYTE : ('0b' RULE_BINARY_|'0x' RULE_HEX_);

RULE_WORD : ('0b' RULE_BINARY_ RULE_BINARY_|'0x' RULE_HEX_ RULE_HEX_);

RULE_DOUBLEWORD : ('0b' RULE_BINARY_ RULE_BINARY_ RULE_BINARY_ RULE_BINARY_|'0x' RULE_HEX_ RULE_HEX_ RULE_HEX_ RULE_HEX_);

RULE_CRCCHECK : '#';

RULE_PATH : ('A'..'Z' ':')? ('/' ('a'..'z'|'A'..'Z')*)+ ('.' ('a'..'z'|'A'..'Z')*)+;

RULE_MACADDRESS : RULE_HEX_ ':' RULE_HEX_ ':' RULE_HEX_ ':' RULE_HEX_ ':' RULE_HEX_ ':' RULE_HEX_;

RULE_IPADDRESS : RULE_DECIMALBYTE_ '.' RULE_DECIMALBYTE_ '.' RULE_DECIMALBYTE_ '.' RULE_DECIMALBYTE_;

RULE_HEXSTRING : '0h' RULE_HEX_+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
