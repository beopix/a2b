/**
 * generated by Xtext 2.17.0
 */
package a2b.a2B.util;

import a2b.a2B.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see a2b.a2B.A2BPackage
 * @generated
 */
public class A2BSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static A2BPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public A2BSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = A2BPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case A2BPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.INSTRUCTION:
      {
        Instruction instruction = (Instruction)theEObject;
        T result = caseInstruction(instruction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.DB:
      {
        DB db = (DB)theEObject;
        T result = caseDB(db);
        if (result == null) result = caseInstruction(db);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.DW:
      {
        DW dw = (DW)theEObject;
        T result = caseDW(dw);
        if (result == null) result = caseInstruction(dw);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.DD:
      {
        DD dd = (DD)theEObject;
        T result = caseDD(dd);
        if (result == null) result = caseInstruction(dd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.STR:
      {
        STR str = (STR)theEObject;
        T result = caseSTR(str);
        if (result == null) result = caseInstruction(str);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.BASE64_DECODE:
      {
        Base64Decode base64Decode = (Base64Decode)theEObject;
        T result = caseBase64Decode(base64Decode);
        if (result == null) result = caseInstruction(base64Decode);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.BASE64_ENCODE:
      {
        Base64Encode base64Encode = (Base64Encode)theEObject;
        T result = caseBase64Encode(base64Encode);
        if (result == null) result = caseInstruction(base64Encode);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.PAD:
      {
        PAD pad = (PAD)theEObject;
        T result = casePAD(pad);
        if (result == null) result = caseInstruction(pad);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.INCLUDE:
      {
        INCLUDE include = (INCLUDE)theEObject;
        T result = caseINCLUDE(include);
        if (result == null) result = caseInstruction(include);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.MAC:
      {
        MAC mac = (MAC)theEObject;
        T result = caseMAC(mac);
        if (result == null) result = caseInstruction(mac);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.IP:
      {
        IP ip = (IP)theEObject;
        T result = caseIP(ip);
        if (result == null) result = caseInstruction(ip);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.PXL:
      {
        PXL pxl = (PXL)theEObject;
        T result = casePXL(pxl);
        if (result == null) result = caseInstruction(pxl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.HXS:
      {
        HXS hxs = (HXS)theEObject;
        T result = caseHXS(hxs);
        if (result == null) result = caseInstruction(hxs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.CRC16:
      {
        CRC16 crc16 = (CRC16)theEObject;
        T result = caseCRC16(crc16);
        if (result == null) result = caseInstruction(crc16);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.CRC32:
      {
        CRC32 crc32 = (CRC32)theEObject;
        T result = caseCRC32(crc32);
        if (result == null) result = caseInstruction(crc32);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.BE:
      {
        BE be = (BE)theEObject;
        T result = caseBE(be);
        if (result == null) result = caseInstruction(be);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.LE:
      {
        LE le = (LE)theEObject;
        T result = caseLE(le);
        if (result == null) result = caseInstruction(le);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.PCAP:
      {
        PCAP pcap = (PCAP)theEObject;
        T result = casePCAP(pcap);
        if (result == null) result = caseInstruction(pcap);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case A2BPackage.NL:
      {
        NL nl = (NL)theEObject;
        T result = caseNL(nl);
        if (result == null) result = caseInstruction(nl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Instruction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Instruction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInstruction(Instruction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DB</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DB</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDB(DB object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DW</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DW</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDW(DW object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDD(DD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>STR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>STR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSTR(STR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Base64 Decode</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Base64 Decode</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBase64Decode(Base64Decode object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Base64 Encode</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Base64 Encode</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBase64Encode(Base64Encode object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PAD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PAD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePAD(PAD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>INCLUDE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>INCLUDE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseINCLUDE(INCLUDE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MAC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MAC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMAC(MAC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIP(IP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PXL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PXL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePXL(PXL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>HXS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>HXS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHXS(HXS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CRC16</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CRC16</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCRC16(CRC16 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CRC32</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CRC32</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCRC32(CRC32 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBE(BE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLE(LE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PCAP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PCAP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePCAP(PCAP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>NL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>NL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNL(NL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //A2BSwitch
