/*
 * generated by Xtext 2.17.0
 */
package a2b.tests

import a2b.a2B.Model
import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.eclipse.xtext.testing.validation.ValidationTestHelper

@ExtendWith(InjectionExtension)
@InjectWith(A2BInjectorProvider)
class A2BParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Inject
	extension ValidationTestHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			BE
			DW 0xffff
			DB 255
			IP 255.255.0.0
			LE
			MAC fe:14:ab:05:ff:ff
			BE
			IP 255.0.255.255
			
			LE
			IP 255.0.255.255
			
			LE
			MAC FF:Fe:01:02:aA:AA
			
			LE
			MAC ff:fe:01:02:aa:ab
			
			DB 0
			
			DB 0xff
			
			DB 000000000000000101
			
			DB 255
			
			DB 0xff
			
			DB 0xff
			
			CRC16 #
			STR "Hallo"
			
			DW 0xffff
			
			DW 1
			
			DW 0b0000000011111111
			
			DD 4294967295
			
			PCAP
			
			STR "Hallo"
			
			B64e "Hello"
			
			B64d "Hello"
			
			INCLUDE D:/home/a2b.compiler/dude.bin
			
			DB 255
			
			PXL 0 0 255
		''')
		result.assertNoErrors
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
